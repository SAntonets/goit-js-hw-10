{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast/dist/js/iziToast.min.js\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    userSelectedDate = selectedDate;\n\n    if (selectedDate < new Date()) {\n      // Вибрана дата в минулому\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      document.querySelector('[data-start]').disabled = true;\n    } else {\n      // Вибрана валідна дата\n      document.querySelector('[data-start]').disabled = false;\n    }\n  },\n};\n\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction addLeadingZero(value) {\n  return value < 10 ? `0${value}` : value;\n}\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n  document.querySelector('[data-start]').disabled = true;\n\n  const intervalId = setInterval(() => {\n    const timeDiff = userSelectedDate - new Date();\n\n    if (timeDiff <= 0) {\n      clearInterval(intervalId);\n      updateTimerUI(0, 0, 0, 0);\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown complete!',\n      });\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(timeDiff);\n      updateTimerUI(days, hours, minutes, seconds);\n    }\n  }, 1000);\n});\n\nfunction updateTimerUI(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\n"],"names":["userSelectedDate","convertMs","ms","days","hours","minutes","seconds","options","selectedDates","selectedDate","iziToast","flatpickr","addLeadingZero","value","intervalId","timeDiff","updateTimerUI"],"mappings":"0IAKA,IAAIA,EAEJ,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EACpCR,EAAmBS,EAEfA,EAAe,IAAI,MAErBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,SAAS,cAAc,cAAc,EAAE,SAAW,IAGlD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,EAGAC,EAAU,mBAAoBJ,CAAO,EAErC,SAASK,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACpC,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACrE,SAAS,cAAc,cAAc,EAAE,SAAW,GAElD,MAAMC,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAWf,EAAmB,IAAI,KAExC,GAAIe,GAAY,EACd,cAAcD,CAAU,EACxBE,EAAc,EAAG,EAAG,EAAG,CAAC,EACxBN,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qBACjB,CAAO,MACI,CACL,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUc,CAAQ,EAC5DC,EAAcb,EAAMC,EAAOC,EAASC,CAAO,CAC5C,CACF,EAAE,GAAI,CACT,CAAC,EAED,SAASU,EAAcb,EAAMC,EAAOC,EAASC,EAAS,CACpD,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeT,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcS,EAAeR,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcQ,EAAeP,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcO,EAAeN,CAAO,CAC/E"}